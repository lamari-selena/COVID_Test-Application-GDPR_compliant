plugins {
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.palantir.docker-run' version "0.22.1"
    id 'com.palantir.docker' version "0.22.1"
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.4")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.5'
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    testImplementation 'org.springframework.security:spring-security-test'
    implementation ('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client') {
        exclude group: 'javax.ws.rs', module: 'jsr311-api'
    }
//    implementation 'org.springframework.security:spring-security-oauth2-resource-server:5.4.6'
//    implementation 'org.springframework.security:spring-security-oauth2-jose:5.5.2'
    implementation 'org.keycloak:keycloak-admin-client:14.0.0'

    implementation 'org.springframework.cloud:spring-cloud-starter-config:3.0.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.0.3'

    implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.7.8'
    implementation 'org.springframework.cloud:spring-cloud-stream:3.1.3'
    implementation 'org.apache.kafka:kafka-streams:2.8.1'
    implementation 'com.google.code.gson:gson:2.8.9'


}

configurations.implementation {
    exclude module: "spring-boot-starter-tomcat"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

docker {
    name "${project.name}:${project.version}"
    files "$buildDir/libs/${project.name}-${project.version}.jar"
    buildArgs([JAR_FILE: "${project.name}-${project.version}.jar"])
}

dockerRun {
    name "${project.name}"
    image "${project.name}:${project.version}"
    ports '1001:1001'
    daemonize true
}
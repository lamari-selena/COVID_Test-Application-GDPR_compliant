plugins {
    id 'org.springframework.boot' version '2.5.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'

    id 'com.palantir.docker-run' version "0.22.1"
    id 'com.palantir.docker' version "0.22.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.7.2'

    implementation 'org.webjars:webjars-locator-core'
    implementation 'org.webjars:sockjs-client:1.0.2'
    implementation 'org.webjars:stomp-websocket:2.3.3'
    implementation 'org.webjars:bootstrap:3.3.7'
    implementation 'org.webjars:jquery:3.1.1-1'

    implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.7.8'
    implementation 'org.springframework.cloud:spring-cloud-stream:3.1.3'
    implementation 'org.apache.kafka:kafka-streams:2.8.1'
    implementation 'com.google.code.gson:gson:2.8.9'

    implementation 'org.springframework.cloud:spring-cloud-starter-config:3.0.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:3.0.3'
}

test {
    useJUnitPlatform()
}

docker {
    name "${project.name}:${project.version}"
    files "$buildDir/libs/${project.name}-${project.version}.jar"
    buildArgs([JAR_FILE: "${project.name}-${project.version}.jar"])
}

dockerRun {
    name "${project.name}"
    image "${project.name}:${project.version}"
    ports '7001:7001'
    daemonize true
}
